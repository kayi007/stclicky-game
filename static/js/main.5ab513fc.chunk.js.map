{"version":3,"sources":["components/Header/index.js","components/Characters/index.js","components/MainGame/index.js","App.js","index.js"],"names":["Header","props","className","href","alt","id","src","currentScore","topScore","message","Card","key","name","style","backgroundImage","image","backgroundPosition","backgroundSize","backgroundRepeat","onClick","handleClicked","Game","state","characters","componentDidMount","sort","a","b","Math","random","setState","charClicked","filter","character","clicked","length","i","this","map","Component","App","ReactDOM","render","document","getElementById"],"mappings":"urCAsCeA,MAnCf,SAAgBC,GACZ,OACI,4BAAQC,UAAU,UACd,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,qBACX,uBAAGC,KAAK,KAAI,yBAAKC,IAAI,kBAAkBC,GAAG,SAASC,IAAI,kBAAkBJ,UAAU,gBAEvF,yBAAKA,UAAU,uBACX,wBAAIA,UAAU,oBAAd,+BACA,wBAAIA,UAAU,gCAAd,6EAEJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,OAAf,kBACoBD,EAAMM,eAG9B,yBAAKL,UAAU,4BACX,yBAAKA,UAAU,OAAf,cACgBD,EAAMO,aAKlC,yBAAKN,UAAU,2BACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,OAAOD,EAAMQ,c,MCdpCC,MAZf,SAAcT,GACV,OACI,yBAAKC,UAAU,uBAAuBS,IAAKV,EAAMU,IAAKP,IAAKH,EAAMW,KAAMC,MAAO,CAACC,gBAAgB,OAAD,OAASb,EAAMc,MAAf,KAA0BC,mBAAoB,SAC5IC,eAAgB,QAChBC,iBAAkB,aAAcC,QAAS,kBAAMlB,EAAMmB,cAAcnB,EAAMI,Q,OCF7EE,G,MAAe,GACfC,EAAW,EACXC,EAAU,mCA2GCY,E,2MAxGXC,MAAQ,CACJC,aACAhB,eACAC,WACAC,W,EAIJe,kBAAoB,WAChBD,EAAWE,MAAK,SAACC,EAAGC,GAChB,MAAO,GAAMC,KAAKC,YAEtB,EAAKC,SAAS,CAAEP,gB,EAIpBH,cAAgB,SAAAf,GAEZ,IAEM0B,EAFY,EAAKT,MAAMC,WAAWS,QAAO,SAAAC,GAAS,OAA0B,IAAtBA,EAAUC,WAExCF,QAAO,SAAAC,GAAS,OAAIA,EAAU5B,KAAOA,KAGnE,GAA2B,IAAvB0B,EAAYI,OAAc,CAC1B5B,EAAe,EACfE,EAAU,sCAGV,IAAK,IAAI2B,EAAI,EAAGA,EAAIb,EAAWY,OAAQC,IACnCb,EAAWa,GAAGF,SAAU,EAI5BX,EAAWE,MAAK,SAACC,EAAGC,GAChB,MAAO,GAAMC,KAAKC,YAGtB,EAAKC,SAAS,CACVP,aACAhB,eACAE,gBAIH,CAGD,GAFAsB,EAAY,GAAGG,SAAU,EAEO,KAA5B,EAAKZ,MAAMf,aAAqB,CAChCA,EAAe,EACfC,EAAW,EACXC,EAAU,kCACV,EAAKqB,SAAS,CAAEtB,aAGhB,IAAK,IAAI4B,EAAI,EAAGA,EAAIb,EAAWY,OAAQC,IACnCb,EAAWa,GAAGF,SAAU,OAI5BzB,EAAU,yBADVF,GAA8B,GAGXC,IACfA,EAAWD,EACX,EAAKuB,SAAS,CAAEtB,cAKxBe,EAAWE,MAAK,SAACC,EAAGC,GAChB,MAAO,GAAMC,KAAKC,YAGtB,EAAKC,SAAS,CACVP,aACAhB,eACAE,c,wEAKF,IAAD,OACL,OACI,6BACI,kBAAC,EAAD,CAAQF,aAAc8B,KAAKf,MAAMf,aAAcC,SAAU6B,KAAKf,MAAMd,SAAUC,QAAS4B,KAAKf,MAAMb,UAClG,yBAAKP,UAAU,uBACX,yBAAKA,UAAU,oBAENmC,KAAKf,MAAMC,WAAWe,KAAI,SAAAL,GAAS,OAChC,kBAAC,EAAD,CACIb,cAAe,EAAKA,cACpBf,GAAI4B,EAAU5B,GACdM,IAAG,iBAAYsB,EAAU5B,IACzBO,KAAMqB,EAAUrB,KAChBG,MAAOkB,EAAUlB,kB,GA9FlCwB,aCDJC,MANf,WACI,OACI,kBAAC,EAAD,O,MCARC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5ab513fc.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n    return (\n        <header className=\"header\">\n            <div className=\"container-fluid\">\n                <div className=\"row p-3\">\n                    <div className=\"col-3 text-center\">\n                        <a href=\"/\"><img alt=\"Stranger Things\" id=\"STlogo\" src=\"./imgs/logo.png\" className=\"img-fluid\"></img></a>\n                    </div>\n                    <div className=\"col-6 p-3 gameTitle\">\n                        <h1 className=\"text-center mt-3\">Stranger Things Memory Game</h1>\n                        <h6 className=\"description text-center mt-3\">Click on an image to earn points, but don't click on any more than once!</h6>\n                    </div>\n                    <div className=\"col-3 p-4 scores\">\n                        <div className=\"currentScore row text-center\">\n                            <div className=\"col\">\n                                Current Score: {props.currentScore}\n                            </div>\n                        </div>\n                        <div className=\"topScore row text-center\">\n                            <div className=\"col\">\n                                Top Score: {props.topScore}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row message text-center\">\n                    <div className=\"col\">\n                        <h3 className=\"m-0\">{props.message}</h3>\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n// import { url } from \"inspector\";\n\nfunction Card(props) {\n    return (\n        <div className=\"charCard float-right\" key={props.key} alt={props.name} style={{backgroundImage: `url(${props.image})`,  backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'}} onClick={() => props.handleClicked(props.id)}>\n            {/* <div className=\"img-container\"> */}\n                {/* <img className=\"img\" key={props.key} alt={props.name} src={props.image} /> */}\n            {/* </div> */}\n        </div>\n    );\n}\n\nexport default Card;","import React, { Component } from \"react\";\nimport Header from \"../Header\";\nimport Card from \"../Characters\";\nimport characters from \"../../characters.json\";\nimport \"./style.css\";\n\nlet currentScore = 0;\nlet topScore = 0;\nlet message = \"Click on any character to start!\";\n\nclass Game extends Component {\n    state = {\n        characters,\n        currentScore,\n        topScore,\n        message\n    };\n\n    // Shuffle chracters each time \n    componentDidMount = () => {\n        characters.sort((a, b) => {\n            return 0.5 - Math.random();\n        });\n        this.setState({ characters });\n    }\n\n    // Handle Character Clicks\n    handleClicked = id => {\n        // Filter to get an array of unclicked\n        const unclicked = this.state.characters.filter(character => character.clicked === false);\n        // Filter to check if the current click is in the unclicked\n        const charClicked = unclicked.filter(character => character.id === id);\n\n        // If it's been clicked\n        if (charClicked.length === 0) {\n            currentScore = 0;\n            message = \"You guessed incorrectly! Try Again!\";\n\n            // rest all character to unclicked\n            for (let i = 0; i < characters.length; i++) {\n                characters[i].clicked = false;\n            }\n\n            // reshuffle\n            characters.sort((a, b) => {\n                return 0.5 - Math.random();\n            });\n\n            this.setState({\n                characters,\n                currentScore,\n                message\n            });\n        }\n        // if not been clicked\n        else {\n            charClicked[0].clicked = true;\n            // if guessed all of them\n            if (this.state.currentScore === 12) {\n                currentScore = 0;\n                topScore = 0;\n                message = \"You got all of them! Great Job!\";\n                this.setState({ topScore });\n\n                // reset all characters' click to false\n                for (let i = 0; i < characters.length; i++) {\n                    characters[i].clicked = false;\n                }\n            } else {\n                currentScore = currentScore + 1;\n                message = \"You gussed correctly!\";\n\n                if (currentScore > topScore) {\n                    topScore = currentScore;\n                    this.setState({ topScore });\n                }\n            }\n\n            // reshuffle\n            characters.sort((a, b) => {\n                return 0.5 - Math.random();\n            });\n\n            this.setState({\n                characters,\n                currentScore,\n                message\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Header currentScore={this.state.currentScore} topScore={this.state.topScore} message={this.state.message} />\n                <div className=\"container-fluid p-0\">\n                    <div className=\"row mainGame p-4\">\n                        {/* <div className=\"col-12\"> */}\n                            {this.state.characters.map(character => (\n                                <Card\n                                    handleClicked={this.handleClicked}\n                                    id={character.id}\n                                    key={`STchar-${character.id}`}\n                                    name={character.name}\n                                    image={character.image}\n                                />\n                            ))}\n                        {/* </div> */}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Game;","import React from \"react\";\nimport Game from \"./components/MainGame\";\n\nfunction App(){\n    return (\n        <Game />\n    );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}